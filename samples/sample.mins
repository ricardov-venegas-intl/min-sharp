// This is a work in progress sample

using System;
import amazon.DynamoDb; // External services + repositorues

namespace EvilCatSociety.BlogService {
   // Data Structs as a first class citizens
   public datastruct Article {
      DateTime date;
      String Title
      String? Content;  // Nullables are explicit
      Boolean Published;
      Number NumberOfWords;
   }

   public interface IFeedEngine
   {
      AsyncAction<Article> Post;
      AsyncFunction<IEnumerable<Article>> ListAllArticles;
      AsyncFunction<IEnumerable<Article>> ListPublishedArticles;
      AsyncFunction<Article,Number> RemoveArticle;
   }

   public module FeedEngine: IFeedEngine 
   {
      using IDynamodDB dynamodb; // Automatic IoC
      using WordCounter wordCounter;

      function p = () => DateTime.Now.Ticks;
      async function clearArticles =  ()=> db.clear();
      
      async function Post = (Article article) => // modules only receive Data structures in calls
      {
         if (article.Content != null)
         {
            article.NumberOfWord = wordCounter.countWords(article.Content);
         }
         await dynamodb.save<Article>();
      }

      async function ListAllArticles = () => try db.ReadAll<Article>();

      async function ListPublishedArticles = () =>
      {
         return await try { db.ReadAll().Where(=> $.Published == true); }
                     else {
                           return Array<Article>(1){  // Arrays are just generics
                                                   {Date = DateTime.Now, 
                                                      Title ="Evil Cat 3000"
                                                      Content = "",
                                                      NumberOfWords =0,
                                                      Published = false
                                                      }};
                           }
      }

       async function RemoveArticle = (Number index) =>
       {
          await db.Delete(index);
       }
   }

   private class WordCounter
   {
      function int CountWords =  (String s) => s.Chars.Sum( => $ == " ");      
   }
}